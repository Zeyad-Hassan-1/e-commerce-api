openapi: 3.0.1
info:
  title: Shopping Cart API
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: Authentication
  - name: Products
  - name: Reviews
  - name: Favourites
  - name: Carts
  - name: Orders
  - name: Users
paths:
  /api/v1/users:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                bio:
                  type: string
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity

  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized

  /api/v1/confirm-email:
    get:
      tags:
        - Authentication
      summary: Confirm email using token
      parameters:
        - in: query
          name: token
          schema:
            type: string
      responses:
        '200':
          description: Email confirmed
        '404':
          description: Token invalid

  /api/v1/resend-confirmation:
    post:
      tags:
        - Authentication
      summary: Resend email confirmation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Confirmation email resent

  /api/v1/password/forgot:
    post:
      tags:
        - Authentication
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Email sent

  /api/v1/password/reset:
    post:
      tags:
        - Authentication
      summary: Reset password using token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Password reset successful

  /api/v1/me:
    get:
      tags:
        - Users
      summary: Get current user details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized

  /api/v1/products:
    get:
      tags:
        - Products
      summary: List all products
      description: |
        Retrieve a paginated list of products. Optional query parameters `page` and `per_page` can be used to control pagination. Defaults are:
        - `page`: 1
        - `per_page`: 10
        - Maximum `per_page`: 100
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number to retrieve (must be 1 or greater).
        - in: query
          name: per_page
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of products per page (minimum 1, maximum 100).
      responses:
        '200':
          description: Successful response with a paginated list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      description: A single product item
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "Amazing Product"
                        description:
                          type: string
                          example: "This is an amazing product description"
                        price:
                          type: number
                          example: 29.99
                  meta:
                    type: object
                    description: Metadata for pagination
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      next_page:
                        type: integer
                        example: 2
                        nullable: true
                      prev_page:
                        type: integer
                        example: null
                        nullable: true
                      total_pages:
                        type: integer
                        example: 10
                      total_count:
                        type: integer
                        example: 100
        '400':
          description: Invalid pagination parameters (e.g., `page` or `per_page` are not valid integers or are less than 1)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid pagination parameters"
    post:
      tags:
        - Products
      summary: Create new product (Admin only)
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                colors:
                  type: array
                  items:
                    type: string
                  example: [ "red", "blue", "green" ]
                sizes:
                  type: array
                  items:
                    type: string
                  example: [ "S", "M", "L" ]
                images:
                  type: array
                  items:
                    type: string
                    format: uri
                  example: [ "https://image-url.com/image1.jpg" ]
                categories:
                  type: array
                  items:
                    type: string
                  example: [ "Electronics", "Accessories" ]
      responses:
        '201':
          description: Product created
        '403':
          description: Forbidden


  /api/v1/products/{id}:
    get:
      tags:
        - Products
      summary: Get product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
    put:
      tags:
        - Products
      summary: Update a product (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
      responses:
        '200':
          description: Product updated
        '403':
          description: Forbidden
    delete:
      tags:
        - Products
      summary: Delete a product (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product deleted
        '403':
          description: Forbidden

  /api/v1/products/{product_id}/reviews:
    post:
      tags:
        - Reviews
      summary: Add a review to a product
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized

  /api/v1/reviews/{id}:
    put:
      tags:
        - Reviews
      summary: Update a review
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                rating:
                  type: integer
      responses:
        '200':
          description: Review updated
    delete:
      tags:
        - Reviews
      summary: Delete a review
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Review deleted

  /api/v1/favourites:
    get:
      tags:
        - Favourites
      summary: List favourite products
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
    post:
      tags:
        - Favourites
      summary: Add product to favourites
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
      responses:
        '201':
          description: Added to favourites
  /api/v1/favourites/{product_id}:
    delete:
      tags:
        - Favourites
      summary: Remove product from favourites
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '204':
          description: Removed from favourites

  /api/v1/cart:
    get:
      tags:
        - Carts
      summary: View current user's cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK

  /api/v1/cart_items:
    post:
      tags:
        - Carts
      summary: Add item to cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - product_id
                - quantity
                - selected_color
                - selected_size
              properties:
                product_id:
                  type: integer
                quantity:
                  type: integer
                selected_color:
                  type: string
                selected_size:
                  type: string
      responses:
        '201':
          description: Added to cart
        '422':
          description: Validation failed
        '404':
          description: Product not found
  /api/v1/cart_items/{product_id}:
    put:
      tags:
        - Carts
      summary: Update cart item (quantity, color, size)
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
                - selected_color
                - selected_size
              properties:
                quantity:
                  type: integer
                selected_color:
                  type: string
                selected_size:
                  type: string
      responses:
        '200':
          description: Updated cart item
        '404':
          description: Cart item not found
        '422':
          description: Validation failed
    delete:
      tags:
        - Carts
      summary: Remove item from cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - product_id
              properties:
                product_id:
                  type: integer
      responses:
        '204':
          description: Removed from cart

  /api/v1/orders:
    get:
      tags:
        - Orders
      summary: View current user's orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders
    post:
      tags:
        - Orders
      summary: Place an order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Order placed
